<?xml version="1.0" encoding="utf-8"?>
<testsuites time="0.409" tests="77" failures="0">
  <testsuite id="0" name="/home/gabrielgio/Git/hcrawler.api/HCrawler.Test/bin/Debug/netcoreapp3.1/HCrawler.Test.dll" tests="77" failures="0" time="0.409">
    <testcase classname="HCrawler.Test.ImageTests" name="HCrawler.Test.ImageTests.Create Profile If Not Exists(sourceName: &quot;source name&quot;, sourceId: 1, url: &quot;http://localhost/&quot;, profileName: &quot;profile name&quot;, profileId: 2)" time="0.1972322" />
    <testcase classname="HCrawler.Test.ImageTests" name="HCrawler.Test.ImageTests.Create Source If Not Exists(sourceName: &quot;demo&quot;, sourceId: 1, sourceUrl: &quot;http://localhost/&quot;)" time="0.0045925" />
    <testcase classname="HCrawler.Test.ImageTests" name="HCrawler.Test.ImageTests.Create Image If Not Exists&lt;Int32&gt;(path: &quot;/home/&quot;, sourceName: &quot;demo&quot;, sourceId: 2, profileName: &quot;profile Name&quot;, profileId: 3, url: &quot;http://localhost/&quot;)" time="0.0058518" />
    <testcase classname="HCrawler.Test.ImageTests" name="HCrawler.Test.ImageTests.Create Image If Exists&lt;Int32, Int32&gt;(path: &quot;/home/&quot;, sourceName: &quot;demo&quot;, sourceId: 2, profileName: &quot;profile Name&quot;, profileId: 3, url: &quot;http://localhost/&quot;)" time="0.0003636" />
    <testcase classname="HCrawler.Test.ImageTests" name="HCrawler.Test.ImageTests.Create Source If Exist(sourceName: &quot;demo&quot;, sourceId: 1)" time="0.0007517" />
    <testcase classname="HCrawler.Test.ImageTests" name="HCrawler.Test.ImageTests.Create Profile If Exists(sourceName: &quot;source name&quot;, sourceId: 1, url: &quot;http://localhost/&quot;, profileName: &quot;profile name&quot;, profileId: 2)" time="0.0007110" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Single Payload(name: &quot;carousel&quot;, index: 1, imagePath: &quot;gaeungbebe/2253858773301191985_873251263.jpeg&quot;, imageUrl: &quot;https://www.instagram.com/p/B9HUJ1lAc9b&quot;, dateTime: &quot;2/28/2020 2:42:05 PM&quot;, profileName: &quot;gaeungbebe&quot;, profileUrl: &quot;https://www.instagram.com/gaeungbebe&quot;)" time="0.0721181" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Single Payload(name: &quot;carousel&quot;, index: 0, imagePath: &quot;gaeungbebe/2253858724269707438_873251263.mp4&quot;, imageUrl: &quot;https://www.instagram.com/p/B9HUJ1lAc9b&quot;, dateTime: &quot;2/28/2020 2:42:05 PM&quot;, profileName: &quot;gaeungbebe&quot;, profileUrl: &quot;https://www.instagram.com/gaeungbebe&quot;)" time="0.0013971" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Post DateTime(name: &quot;video&quot;, dateTime: &quot;4/28/2017 10:06:38 PM&quot;)" time="0.0007013" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Post DateTime(name: &quot;image&quot;, dateTime: &quot;12/10/2019 5:28:26 PM&quot;)" time="0.0005986" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Post DateTime(name: &quot;carousel&quot;, dateTime: &quot;2/28/2020 2:42:05 PM&quot;)" time="0.0004340" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Post Url(name: &quot;video&quot;, url: &quot;https://www.instagram.com/p/BTcffX1gw9V&quot;)" time="0.0005605" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Post Url(name: &quot;carousel&quot;, url: &quot;https://www.instagram.com/p/B9HUJ1lAc9b&quot;)" time="0.0004259" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Post Url(name: &quot;image&quot;, url: &quot;https://www.instagram.com/p/B55nmTWnDET&quot;)" time="0.0002293" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Carousel Download(name: &quot;carousel&quot;, index: 1, path: &quot;instagram/gaeungbebe/2253858773301191985_873251263&quot;..., url: &quot;https://scontent-frt3-1.cdninstagram.com/v/t51.288&quot;...)" time="0.0018708" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Carousel Download(name: &quot;carousel&quot;, index: 0, path: &quot;instagram/gaeungbebe/2253858724269707438_873251263&quot;..., url: &quot;https://scontent-frt3-1.cdninstagram.com/v/t50.288&quot;...)" time="0.0009671" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Video Download(name: &quot;video&quot;, path: &quot;instagram/baesuicide/1503214870974369621_703072962&quot;..., url: &quot;https://scontent-dus1-1.cdninstagram.com/v/t50.288&quot;...)" time="0.0017126" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Carousel Video Download(name: &quot;carousel&quot;, index: 0, path: &quot;instagram/gaeungbebe/2253858724269707438_873251263&quot;..., url: &quot;https://scontent-frt3-1.cdninstagram.com/v/t50.288&quot;...)" time="0.0010782" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Image Download(name: &quot;image&quot;, path: &quot;instagram/maple.pepe_/2195960449254306067_21933169&quot;..., url: &quot;https://scontent-dus1-1.cdninstagram.com/v/t51.288&quot;...)" time="0.0017378" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Image Payload(name: &quot;image&quot;, imagePath: &quot;maple.pepe_/2195960449254306067_21933169435.jpeg&quot;, imageUrl: &quot;https://www.instagram.com/p/B55nmTWnDET&quot;, dateTime: &quot;12/10/2019 5:28:26 PM&quot;, profileName: &quot;maple.pepe_&quot;, profileUrl: &quot;https://www.instagram.com/maple.pepe_&quot;)" time="0.0012039" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Image Carousel Path(name: &quot;carousel&quot;, index: 1, path: &quot;gaeungbebe/2253858773301191985_873251263.jpeg&quot;)" time="0.0009840" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Image Carousel Path(name: &quot;carousel&quot;, index: 0, path: &quot;gaeungbebe/2253858724269707438_873251263.jpeg&quot;)" time="0.0023789" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Download Post for Video(name: &quot;video&quot;, path: &quot;instagram/baesuicide/1503214870974369621_703072962&quot;..., url: &quot;https://scontent-dus1-1.cdninstagram.com/v/t50.288&quot;...)" time="0.0040973" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Video Carousel Path(name: &quot;carousel&quot;, index: 1, path: &quot;gaeungbebe/2253858773301191985_873251263.mp4&quot;)" time="0.0009980" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Video Carousel Path(name: &quot;carousel&quot;, index: 0, path: &quot;gaeungbebe/2253858724269707438_873251263.mp4&quot;)" time="0.0004306" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Image Path(name: &quot;image&quot;, path: &quot;maple.pepe_/2195960449254306067_21933169435.jpeg&quot;)" time="0.0005970" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Video Payload(name: &quot;video&quot;, imagePath: &quot;baesuicide/1503214870974369621_703072962.mp4&quot;, imageUrl: &quot;https://www.instagram.com/p/BTcffX1gw9V&quot;, dateTime: &quot;4/28/2017 10:06:38 PM&quot;, profileName: &quot;baesuicide&quot;, profileUrl: &quot;https://www.instagram.com/baesuicide&quot;)" time="0.0011726" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Downloads Post for Carousel(name: &quot;carousel&quot;, pathFirst: &quot;instagram/gaeungbebe/2253858724269707438_873251263&quot;..., urlFirst: &quot;https://scontent-frt3-1.cdninstagram.com/v/t50.288&quot;..., pathLast: &quot;instagram/gaeungbebe/2253858773301191985_873251263&quot;..., urlLast: &quot;https://scontent-frt3-1.cdninstagram.com/v/t51.288&quot;...)" time="0.0057019" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Carousel Image Download(name: &quot;carousel&quot;, index: 1, path: &quot;instagram/gaeungbebe/2253858773301191985_873251263&quot;..., url: &quot;https://scontent-frt3-1.cdninstagram.com/v/t51.288&quot;...)" time="0.0007692" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Carousel Downloads?(name: &quot;carousel&quot;, pathFirst: &quot;instagram/gaeungbebe/2253858724269707438_873251263&quot;..., urlFirst: &quot;https://scontent-frt3-1.cdninstagram.com/v/t50.288&quot;..., pathLast: &quot;instagram/gaeungbebe/2253858773301191985_873251263&quot;..., urlLast: &quot;https://scontent-frt3-1.cdninstagram.com/v/t51.288&quot;...)" time="0.0011350" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Download Post for image(name: &quot;image&quot;, path: &quot;instagram/maple.pepe_/2195960449254306067_21933169&quot;..., url: &quot;https://scontent-dus1-1.cdninstagram.com/v/t51.288&quot;...)" time="0.0010409" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Profile Url(name: &quot;image&quot;, url: &quot;https://www.instagram.com/maple.pepe_&quot;)" time="0.0004540" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Profile Url(name: &quot;video&quot;, url: &quot;https://www.instagram.com/baesuicide&quot;)" time="0.0001290" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Profile Url(name: &quot;carousel&quot;, url: &quot;https://www.instagram.com/gaeungbebe&quot;)" time="0.0003365" />
    <testcase classname="HCrawler.Test.InstagramTest" name="HCrawler.Test.InstagramTest.Get Video Path(name: &quot;video&quot;, path: &quot;baesuicide/1503214870974369621_703072962.mp4&quot;)" time="0.0004995" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Download Post(name: &quot;v.reddit&quot;, path: &quot;reddit/PewdiepieSubmissions/grb69z.webm&quot;, url: &quot;https://v.redd.it/42j6r7i8z7151&quot;)" time="0.0720819" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Download Post(name: &quot;redgifs&quot;, path: &quot;reddit/kpopfap/gqcm6j.webm&quot;, url: &quot;https://redgifs.com/watch/ripesnivelingfiddlercrab&quot;)" time="0.0009885" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Download Post(name: &quot;imgur_jpeg&quot;, path: &quot;reddit/kpics/gq7v1p.jpg&quot;, url: &quot;https://i.imgur.com/fXLMjfp.jpg&quot;)" time="0.0006036" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Download Post(name: &quot;youtube&quot;, path: &quot;reddit/Documentaries/gqxyzb.webm&quot;, url: &quot;https://www.youtube.com/watch?v=oLkdqptmfng&quot;)" time="0.0007286" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Download Post(name: &quot;gfycat&quot;, path: &quot;reddit/kpopfap/gqcord.webm&quot;, url: &quot;https://gfycat.com/presentdangerousdromedary&quot;)" time="0.0006461" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Download Post(name: &quot;i.reddit&quot;, path: &quot;reddit/kpics/fxogjy.jpg&quot;, url: &quot;https://i.redd.it/pjj1ll1b2rr41.jpg&quot;)" time="0.0005655" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Payload(name: &quot;gfycat&quot;, imagePath: &quot;kpopfap/gqcord.webm&quot;, imageUrl: &quot;https://old.reddit.com/r/kpopfap/comments/gqcord/t&quot;..., dateTime: &quot;5/25/2020 11:13:49 PM&quot;, profileName: &quot;kpopfap&quot;, profileUrl: &quot;https://old.reddit.com/r/kpopfap/&quot;)" time="0.0024224" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Payload(name: &quot;v.reddit&quot;, imagePath: &quot;PewdiepieSubmissions/grb69z.webm&quot;, imageUrl: &quot;https://old.reddit.com/r/PewdiepieSubmissions/comm&quot;..., dateTime: &quot;5/27/2020 10:37:03 AM&quot;, profileName: &quot;PewdiepieSubmissions&quot;, profileUrl: &quot;https://old.reddit.com/r/PewdiepieSubmissions/&quot;)" time="0.0005823" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Payload(name: &quot;i.reddit&quot;, imagePath: &quot;kpics/fxogjy.jpg&quot;, imageUrl: &quot;https://old.reddit.com/r/kpics/comments/fxogjy/xua&quot;..., dateTime: &quot;4/9/2020 4:05:56 PM&quot;, profileName: &quot;kpics&quot;, profileUrl: &quot;https://old.reddit.com/r/kpics/&quot;)" time="0.0004837" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Payload(name: &quot;youtube&quot;, imagePath: &quot;Documentaries/gqxyzb.webm&quot;, imageUrl: &quot;https://old.reddit.com/r/Documentaries/comments/gq&quot;..., dateTime: &quot;5/26/2020 10:23:26 PM&quot;, profileName: &quot;Documentaries&quot;, profileUrl: &quot;https://old.reddit.com/r/Documentaries/&quot;)" time="0.0007154" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Payload(name: &quot;imgur_jpeg&quot;, imagePath: &quot;kpics/gq7v1p.jpg&quot;, imageUrl: &quot;https://old.reddit.com/r/kpics/comments/gq7v1p/yoo&quot;..., dateTime: &quot;5/25/2020 5:17:49 PM&quot;, profileName: &quot;kpics&quot;, profileUrl: &quot;https://old.reddit.com/r/kpics/&quot;)" time="0.0005051" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Is Known(name: &quot;gfycat&quot;, known: 1)" time="0.0028316" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Is Known(name: &quot;imgur_jpeg&quot;, known: 0)" time="0.0002535" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Is Known(name: &quot;youtube&quot;, known: 1)" time="0.0003007" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Is Known(name: &quot;i.reddit&quot;, known: 0)" time="0.0002194" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Is Known(name: &quot;v.reddit&quot;, known: 1)" time="0.0002738" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Is Known(name: &quot;redgifs&quot;, known: 1)" time="0.0002898" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Is Known(name: &quot;unknown_url&quot;, known: 2)" time="0.0001169" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Post DateTime(name: &quot;youtube&quot;, dateTime: &quot;5/26/2020 10:23:26 PM&quot;)" time="0.0006350" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Post DateTime(name: &quot;v.reddit&quot;, dateTime: &quot;5/27/2020 10:37:03 AM&quot;)" time="0.0002767" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Post DateTime(name: &quot;i.reddit&quot;, dateTime: &quot;4/9/2020 4:05:56 PM&quot;)" time="0.0002332" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Post DateTime(name: &quot;gfycat&quot;, dateTime: &quot;5/25/2020 11:13:49 PM&quot;)" time="0.0021238" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Post DateTime(name: &quot;redgifs&quot;, dateTime: &quot;5/25/2020 11:10:03 PM&quot;)" time="0.0004008" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Post DateTime(name: &quot;imgur_jpeg&quot;, dateTime: &quot;5/25/2020 5:17:49 PM&quot;)" time="0.0001953" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Path(name: &quot;gfycat&quot;, path: &quot;kpopfap/gqcord.webm&quot;)" time="0.0006419" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Path(name: &quot;youtube&quot;, path: &quot;Documentaries/gqxyzb.webm&quot;)" time="0.0002826" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Path(name: &quot;i.reddit&quot;, path: &quot;kpics/fxogjy.jpg&quot;)" time="0.0001839" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Path(name: &quot;imgur_jpeg&quot;, path: &quot;kpics/gq7v1p.jpg&quot;)" time="0.0001799" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Path(name: &quot;redgifs&quot;, path: &quot;kpopfap/gqcm6j.webm&quot;)" time="0.0003091" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Path(name: &quot;v.reddit&quot;, path: &quot;PewdiepieSubmissions/grb69z.webm&quot;)" time="0.0002640" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Profile Url(name: &quot;youtube&quot;, url: &quot;https://old.reddit.com/r/Documentaries/&quot;)" time="0.0005763" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Profile Url(name: &quot;redgifs&quot;, url: &quot;https://old.reddit.com/r/kpopfap/&quot;)" time="0.0002475" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Profile Url(name: &quot;gfycat&quot;, url: &quot;https://old.reddit.com/r/kpopfap/&quot;)" time="0.0002338" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Profile Url(name: &quot;v.reddit&quot;, url: &quot;https://old.reddit.com/r/PewdiepieSubmissions/&quot;)" time="0.0002262" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Profile Url(name: &quot;i.reddit&quot;, url: &quot;https://old.reddit.com/r/kpics/&quot;)" time="0.0001731" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Profile Url(name: &quot;imgur_jpeg&quot;, url: &quot;https://old.reddit.com/r/kpics/&quot;)" time="0.0001787" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Full Permalink(name: &quot;v.reddit&quot;, permalink: &quot;https://old.reddit.com/r/PewdiepieSubmissions/comm&quot;...)" time="0.0005910" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Full Permalink(name: &quot;youtube&quot;, permalink: &quot;https://old.reddit.com/r/Documentaries/comments/gq&quot;...)" time="0.0003235" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Full Permalink(name: &quot;redgifs&quot;, permalink: &quot;https://old.reddit.com/r/kpopfap/comments/gqcm6j/j&quot;...)" time="0.0002435" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Full Permalink(name: &quot;imgur_jpeg&quot;, permalink: &quot;https://old.reddit.com/r/kpics/comments/gq7v1p/yoo&quot;...)" time="0.0001654" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Full Permalink(name: &quot;i.reddit&quot;, permalink: &quot;https://old.reddit.com/r/kpics/comments/fxogjy/xua&quot;...)" time="0.0001655" />
    <testcase classname="HCrawler.Test.RedditTest" name="HCrawler.Test.RedditTest.Get Full Permalink(name: &quot;gfycat&quot;, permalink: &quot;https://old.reddit.com/r/kpopfap/comments/gqcord/t&quot;...)" time="0.0002528" />
  </testsuite>
</testsuites>